package com.jobreadyprogrammer;

import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import org.apache.kafka.clients.consumer.ConsumerRecord;
import org.apache.kafka.clients.consumer.ConsumerRecords;
import org.apache.kafka.clients.consumer.KafkaConsumer;
import org.bson.Document;

import java.time.Duration;
import java.util.Collections;
import java.util.Properties;

public class KafkaConsumerExample {
    public static void main(String[] args) {
        Properties props = new Properties();
        props.put("bootstrap.servers", "localhost:9092");
        props.put("group.id", "group1");
        props.put("key.deserializer", "org.apache.kafka.common.serialization.StringDeserializer");
        props.put("value.deserializer", "org.apache.kafka.common.serialization.StringDeserializer");

        KafkaConsumer<String, String> consumer = new KafkaConsumer<>(props);
        consumer.subscribe(Collections.singletonList("elevenlabs-topic"));

        MongoClient mongoClient = MongoClients.create("mongodb://localhost:27017");
        MongoCollection<Document> collection = mongoClient.getDatabase("elevenlabs_db").getCollection("call_conversations");

        try {
            while (true) {
                ConsumerRecords<String, String> records = consumer.poll(Duration.ofMillis(100));
                for (ConsumerRecord<String, String> record : records) {
                    System.out.println("Consumed: " + record.value());
                    Document doc = Document.parse(record.value());
                    doc.append("timestamp", new java.util.Date().toString());
                    collection.insertOne(doc);
                }
            }
        } finally {
            consumer.close();
            mongoClient.close();
        }
    }
}
